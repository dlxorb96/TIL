1. 연산자 &&와 ||

&&의 진짜 의미 앞에 것이 true면 뒤에 것을 실행하라.
||의 의미 앞에 것이 false면 뒤에 것을 실행하라.
??의 의미 앞에 것이 null이나 undefined가 아니면 뒤에 것을 실행하라

2. 옵셔널 체이닝 ?.
javascript에서 index가 마이너스면 undefined를 가지고 온다.
data[-1][-1]은 undefinded의 [-1]이기 때문에 error가 발생한다
이를 해결하는 방법은 if(data[-1]){data[-1][-1]}을 하거나
?.을 쓴다
옵셔널 체이닝을 사용하면 프로퍼티가 없는 중첩 객체를 에렁벗이 안전하게 접근할 수 있다.
?.앞에 변수는 꼭 선언되어 있어야 한다.
const a = {};
a.b = undefined
a.b.c = error;
a.b?.c = undefined
a?.b.c = error

obj?.prop - obj가 존재하면 obj.prop 반환, 없으면 undefined
obj?.[porp] -obj가 존재하면 obj[prop] 반환, 없으면 undefined
obj?.method() -obj가 존재하면 obj.method() 반환 없으면 undefined

3.재귀함수 겉핡기
재귀함수를 쓸 때 호출스택에 너무 쌓이면 터지게 된다. 
// maximum call stack size exceed 
그럴 때 백그라운드와 태스크큐에 보내줌으로써 해결할 수 있다.
기본적인 방법으로는 setTimeout(()=>{}, 0)이 있다.
